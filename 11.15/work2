第二周
11.11
上午把集群测试完毕
下午集中解决问题 并再完成一版测试

1. 任务完成，docker和kuber命令，使用命令行把本地的jar包放到虚拟机上再用docker命令打到镜像中，然后替换jar包，重启inceptor测试test的无权限show表。
明天把类的关系梳理清楚，DDL类需要再看一下，接口的概念再好好看，工程流程找资料熟练一些。把改动争取做出来。测试指令走两轮。

11.12
节点崩了怎么办-》237节点重启，控制权不在本地，docker不可用原因是没有配置预先挂载好的文件将查到的UUID值<UUID>添加在/etc/fstab中：confluence
gardian本身没有接收控制权限的文件，在本地修改后的代码要在hive端使用接口才能生效
几个查找方式指令k8s和docker
docker常用指令：https://blog.gtwang.org/linux/docker-commands-and-container-management-tutorial/
mvn常用指令：https://blog.csdn.net/zhglance/article/details/54945104
k8s常用指令：https://blog.csdn.net/xingwangc2014/article/details/51204224

视频处理项目实例
ISP通用技术 输入-解码-前处理-推理-后处理-编码-输出
1.输入：V4L2 摄像头-后端连接ONVIF，V4L2 有专设的接口
2.编码：利用时间冗余，空间冗余，感知冗余 用更少的字节数存储更多的视频量 H.26x VPx AVS
3.硬件加速/场景加速 用在编码解码-算法部分
4.推理：GPU编程模型 主存（输出）<->显存（中介）<->GPU（计算/推理）
两种方案：推理服务器/本地推理（SDK）
5.FAAS 数据结构转换/模型服务代理（推理代理）
渲染：（推理-推流（边缘端））-（流媒体服务（边缘端/云端））-（拉流-解码-渲染（浏览器））

AAA
身份认证/权限管理/审计
1. 安全隐私
2. 
3.
4. RBAC基于角色，ABAC基于审计的权限管控模型

11.13
237节点的 inceptor-server崩溃无法进入认证模式 --可以在TDC端设置产品依赖，减小节点压力，在服务端重启服务

jvm的gc总是limit overhead，调整jvm最大可用堆和初始堆大小仍然没用
用Maven是出现OutOfMemory错误，即使设置了MAVEN_OPTS也不起作用
在/etc/profile中添加MAVEN_OPTS参数

指令进入ssh之后。docker images kubectl get po | grep inceptor
mvn install -DskipTests
export MAVEN_OPTS="-Xmx8192m -XX:MaxPermSize=2048m"
beeline -u "jdbc:hive2://localhost:10000/default;principal=hive/tw-node1237@TDH"

beeline简单指令
create table test.testTb(id int) tblproperties('author'='lishinho');
show tables in test
create database db2
select * from test.testtb

ctrl+shift+T在终端窗口新开一个终端
ls -al /root显示操作日期

  private static List<String> mergeSortedTableLists(List<String> tblsWithPrivs, List<String> tbls) {
//    List<String> mergedResult = new ArrayList<>();
//    int i1 = 0, i2 = 0;
//    while (i1 < tblsWithPrivs.size() && i2 < tbls.size()) {
//      int compare = tblsWithPrivs.get(i1).compareTo(tbls.get(i2));
//      if (compare < 0) {
//        i1++;
//      } else if (compare > 0) {
//        i2++;
//      } else {
//        mergedResult.add(tbls.get(i2));
//        i1++;
//        i2++;
//      }
//    }
//    return mergedResult;
    tbls.retainAll(tblsWithPrivs);
    return tbls;
  }
明天解决所有bug提交第一版


11.14

代理模式项目有自带的代理写在配置文件
代码不生效
测了3次都失败 怀疑是代码问题？
klist

la -al /root
1.改动guardian端代码优化，hive代码优化上移-无效
2.略去globalpriv方法的代码和show开关代码-无效
3.tbls.clear()-无效
结论改得代码好像没有起作用
可能缘由：1. 测试过程有问题，代码没有提交到镜像运行
2. 代码配置文件没有调用到guardian端代码？
3. guardian代码修改被避开了，因为测试的权限用户都有

原因：每次push镜像之后要重启inceptor才能生效，查询日志 vim /var/log/inceptor1/hive-server2.log\
s设置断点

测filtertable是否好用。改hasanytable方法

634-657
 boolean hasAnyTablePrivilegesOnDB(String username, String dbName) {//do sth
    try {
      boolean isDBOwner = SQLAuthorizationUtils.isOwner(username, Collections.EMPTY_LIST,
              new HivePrivilegeObject(HivePrivilegeObject.HivePrivilegeObjectType.DATABASE, dbName, null));
      if (isDBOwner) {
        return true;
      }
    } catch (HiveAuthzPluginException ex) {
      LOG.error("Failed to check if user [{}] is the owner of database [{}].", username, dbName, ex);
      // go on
    }
    List<String> dataSource = InceptorPermUtil.convertDatabase(dbName);
    List<PermissionVo> permVos = new ArrayList<>();
    permVos.add(new PermissionVo(component, dataSource, ADMIN_PERM));
    for (GuardianSQLPrivilegeType privilegeType : GuardianSQLPrivilegeType.ALL_ON_TABLE) {
      permVos.add(new PermissionVo(component, dataSource, privilegeType.name()));
    }
    try {
      return guardianClient.checkAnyAccess(username, permVos);
    } catch (GuardianClientException e) {
      LOG.error("Fail to check if user [{}] has any table privileges on database [{}]", username, dbName, e);
      return true;
    }
  }

测试一结果：
show databases时 赋表权限没有上传的database上
show tables不可用，全为空
分析：show databases时原生写的函数只检查赋予db上的权限，并没有审查赋予db中表的权限，权限没有上移->把相应代码修改成guardian拉取全部权限判断是否为空
show tables没有调用到实体，只调到引用，简单修改一下
晚上能跑两次？

bash运行：
开两个终端
1. ssh root@172.16.1.237
ll
2.
scp '/home/transwarp/Downloads/guardian-plugins/plugins/inceptor-plugin/target/inceptor-plugin-transwarp-6.2.1.jar' root@172.16.1.237:/root
scp '/home/transwarp/Downloads/work/hive-0.12.0-transwarp/src/ql/target/inceptor-exec-8.0.1.jar' root@172.16.1.237:/root
1. ll
// docker ps | grep inceptor
docker images | grep inceptor
docker ps | grep 968
docker cp inceptor-exec-8.0.1.jar xxx:/root
docker cp inceptor-plugin-transwarp-6.2.1.jar xxx:/root
2. docker run -it 968 bash
ls

ls
cd /usr/lib/inceptor/lib
ls
[root@50af60a9df09 lib]# mv inceptor-exec-8.0.0.jar /root
[root@50af60a9df09 lib]# mv inceptor-plugin-transwarp-6.2.0.jar /root
[root@50af60a9df09 lib]# ls /root
anaconda-ks.cfg          inceptor-exec-8.0.1.jar              inceptor-plugin-transwarp-6.2.1.jar
inceptor-exec-8.0.0.jar  inceptor-plugin-transwarp-6.2.0.jar  R-3.3.1-21.x86_64.rpm
[root@50af60a9df09 lib]# mv /root/inceptor-plugin-transwarp-6.2.1.jar ./
[root@50af60a9df09 lib]# mv /root/inceptor-exec-8.0.1.jar ./
ls
1.
docker commit 8dc tw-node1236:5000/transwarp/inceptor:transwarp-6.2.0-final
docker push tw-node1236:5000/transwarp/inceptor:transwarp-6.2.0-final
重启inceptor
kubectl get po -owide | grep inceptor
kubectl exec -it inceptor-server-inceptor1-697b7f4665-ctfbq bash
klist
kinit
beeline -u "jdbc:hive2://localhost:10000/default;principal=hive/tw-node1237@TDH"

测试2 show databases没有过滤；show tables admin角色没有显示 test完成
filter加上了global权限的审核

admin代码全部能跑通，test的show databases没有显示表，日志显示全部被过滤掉了


主要的时间在学习docker和k8s的使用处理上，有一个逐渐熟悉的过程，1 hive端的ddltask里面的两个指令中增加逻辑调用接口，2 之前这个项目的代码也优化了权限过滤的逻辑，结果 show tb和db都可以完成权限过滤，
存在问题：filter开关文件指向有一个问题，找到识别的路口，封装。
潜在问题 1.性能上影响 2.权限设置上 根据需求看还需不需要改动一下逻辑
pre-commiter
merge request?


